name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: yarn install
    
    # - name: Run tests
    #   run: yarn test

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: yarn install
    
    - name: Build Next.js app
      run: yarn build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
    
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      with:
        region: ${{ secrets.AWS_DEFAULT_REGION }}
    
    - name: Build Docker images
      run: |
        docker-compose -f docker-compose.yml build

    - name: Tag Docker images
      run: |
        # Define ECR repository URIs
        WEB_ECR_URI=010805383010.dkr.ecr.us-east-1.amazonaws.com/idrisoyelajaolayinka/web
        API_ECR_URI=010805383010.dkr.ecr.us-east-1.amazonaws.com/idrisoyelajaolayinka/api
        
        # Tag Docker images
        docker tag web:latest $WEB_ECR_URI:latest
        docker tag api:latest $API_ECR_URI:latest

    - name: Push Docker images to ECR
      run: |
        # Push Docker images
        docker push 010805383010.dkr.ecr.us-east-1.amazonaws.com/idrisoyelajaolayinka/web:latest
        docker push 010805383010.dkr.ecr.us-east-1.amazonaws.com/idrisoyelajaolayinka/api:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy application (Optional)
      run: |
        echo "Deploy steps here (e.g., updating ECS service, etc.)"