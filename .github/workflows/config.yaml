name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: yarn install
    
    - name: Run tests
      run: yarn test

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: yarn install
    
    - name: Build Next.js app
      run: |
        cd web
        yarn build
    
    - name: Build Express server
      run: |
        cd api
        yarn build
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Amazon ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry: ${{ secrets.ECR_REGISTRY }}
        region: ${{ secrets.AWS_DEFAULT_REGION }}
        access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    - name: Build and tag Docker image
      run: |
        IMAGE_TAG=latest
        docker buildx build --platform linux/amd64 -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .
    
    - name: Push Docker image to Amazon ECR
      run: |
        IMAGE_TAG=latest
        docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy application (Optional)
      run: |
        echo "Deploy steps here (e.g., updating ECS service, etc.)"